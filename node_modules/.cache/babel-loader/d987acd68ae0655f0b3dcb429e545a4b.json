{"ast":null,"code":"var _jsxFileName = \"/home/gracius/task-tracker-react/src/component/Header.js\",\n    _s = $RefreshSig$();\n\n//import  PropTypes from  \"prop-types\"\nimport { useLocation } from \"react-router-dom\";\nimport Buttons from \"./Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  _s();\n\n  let {\n    title,\n    onAdd,\n    showAdd\n  } = _ref;\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), location.pathname === \"/\" && /*#__PURE__*/_jsxDEV(Buttons, {\n      onClick: onAdd,\n      color: showAdd ? \"red\" : \"green\",\n      text: showAdd ? \"fermer\" : \"ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Header;\nHeader.defaultProps = {\n  title: \"bonjour\"\n}; // ici ce pour la robustesse la valeur  de title qu'on attends  est du type string si non il auras erreur et different de vide\n\n/*\nHeader.propTypes={\n    title:PropTypes.string.isRequired\n}\n*/\n//pour mettre du style il suffit style={heandingStyle}\n\n/*\nconst headingStyle={\n    color:\"black\",\n    backgroundColor:\"green\"\n}\n*/\n\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useLocation","Buttons","Header","title","onAdd","showAdd","location","pathname","defaultProps"],"sources":["/home/gracius/task-tracker-react/src/component/Header.js"],"sourcesContent":["//import  PropTypes from  \"prop-types\"\nimport { useLocation } from \"react-router-dom\"\nimport Buttons from \"./Buttons\"\n\nconst Header = ({title,onAdd,showAdd}) => {\n    const location=useLocation()\n  \n  return (\n    <header className=\"header\">\n        <h1 >{title} </h1>\n        { location.pathname===\"/\" && <Buttons onClick={onAdd}  color={showAdd ? \"red\" : \"green\"} text={showAdd ? \"fermer\" : \"ajouter\"}/>\n        }\n      \n    </header>\n  )\n}\nHeader.defaultProps={\n    title:\"bonjour\"\n}\n// ici ce pour la robustesse la valeur  de title qu'on attends  est du type string si non il auras erreur et different de vide\n/*\nHeader.propTypes={\n    title:PropTypes.string.isRequired\n}\n*/\n//pour mettre du style il suffit style={heandingStyle}\n/*\nconst headingStyle={\n    color:\"black\",\n    backgroundColor:\"green\"\n}\n*/\n\n\nexport default Header\n"],"mappings":";;;AAAA;AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,MAAM,GAAG,QAA2B;EAAA;;EAAA,IAA1B;IAACC,KAAD;IAAOC,KAAP;IAAaC;EAAb,CAA0B;EACtC,MAAMC,QAAQ,GAACN,WAAW,EAA1B;EAEF,oBACE;IAAQ,SAAS,EAAC,QAAlB;IAAA,wBACI;MAAA,WAAMG,KAAN;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEMG,QAAQ,CAACC,QAAT,KAAoB,GAApB,iBAA2B,QAAC,OAAD;MAAS,OAAO,EAAEH,KAAlB;MAA0B,KAAK,EAAEC,OAAO,GAAG,KAAH,GAAW,OAAnD;MAA4D,IAAI,EAAEA,OAAO,GAAG,QAAH,GAAc;IAAvF;MAAA;MAAA;MAAA;IAAA,QAFjC;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAXD;;GAAMH,M;UACaF,W;;;KADbE,M;AAYNA,MAAM,CAACM,YAAP,GAAoB;EAChBL,KAAK,EAAC;AADU,CAApB,C,CAGA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}